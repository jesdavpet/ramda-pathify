function pathify(a){const b=Array.isArray(a)?a[0]:a,d=/^[a-zA-Z]$/,e=/^\-?[0-9]+$/,f=/^\.$/,g=/^\'|\"|\`$/,h=/^\[$/,i=/^\]$/,j=[],k=[];let l=!1,m=!1,n=0;for(let o=0;o<b.length;o++){const a=b.charAt(o),c=b.slice(n,o),[p]=j.slice(-1);if(0===o&&!d.test(a)&&!h.test(a))throw new Error(`Must start with an alpha character!`);if(f.test(a)&&!m&&(c&&k.push(c),n=o+1),h.test(a)&&!m){if(`[`===p)throw new Error(`Square brackets may not be nested!`);c&&k.push(c),l=!0,j.push(`[`),n=o+1}if(i.test(a)&&`[`===p&&l&&!m){l=!1,j.pop();const a=e.test(c)?parseInt(c):c;``!==a&&k.push(a),n=o+1}if(g.test(a)){if(!l)throw new Error(`Quotes are only allowed in brackets!`);p===a||m||(m=!0,j.push(a)),p===a&&m&&(m=!1,j.pop(),k.push(b.slice(n+1,o)),n=o+1)}}if(n<b.length-1&&k.push(b.slice(n)),m)throw new Error(`Unmatched quote!`);if(l)throw new Error(`Unmatched square bracket!`);return k}module.exports=pathify;